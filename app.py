# app.py
import asyncio
import os
from pathlib import Path
from contextlib import asynccontextmanager
from fastapi import FastAPI
from fastapi.staticfiles import StaticFiles
from fastapi.responses import FileResponse
from fastapi.middleware.cors import CORSMiddleware
from aiogram import Dispatcher, Bot
from aiogram.filters import Command

# –ò–º–ø–æ—Ä—Ç—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from handlers.user_handlers import cmd_start, select_faction
from handlers.building_handlers import cmd_buildings, cmd_build, cmd_upgrade
from handlers.wizard_handlers import cmd_profile, cmd_wizards, cmd_spells, cmd_research, cmd_cancel_research, cmd_hire_wizard
from handlers.city_handler import open_city
from api.building_api import api_build

# –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
BASE_DIR = Path(__file__).resolve().parent

def create_app(dp: Dispatcher, bot: Bot) -> FastAPI:
    """–°–æ–∑–¥–∞–µ—Ç –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."""

    # --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ FastAPI ---
    @asynccontextmanager
    async def lifespan(app: FastAPI):
        # –ö–æ–¥ –¥–æ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
        print("üöÄ FastAPI —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤.")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ –º—ã –Ω–∞ Render
        is_render = os.environ.get('RENDER') is not None

        task = None
        if is_render:
            # –ù–∞ Render: –ó–∞–ø—É—Å–∫–∞–µ–º polling. –ü–æ–∑–∂–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ Webhook.
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ is_render –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º.
            print("ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (–Ω–∞ Render, polling).")
            task = asyncio.create_task(dp.start_polling(bot))
        else:
            # –õ–æ–∫–∞–ª—å–Ω–æ: –ó–∞–ø—É—Å–∫–∞–µ–º polling –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            print("ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (–ª–æ–∫–∞–ª—å–Ω–æ, polling).")
            task = asyncio.create_task(dp.start_polling(bot))

        yield

        # –ö–æ–¥ –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
        if task:
            print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram –±–æ—Ç–∞...")
            task.cancel()
            try:
                await task
            except asyncio.CancelledError:
                pass
            print("üõë Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

    app = FastAPI(lifespan=lifespan)

    # --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ ---
    # User handlers
    dp.message.register(cmd_start, Command("start"))
    dp.message.register(select_faction, Command("fire", "water", "wind", "earth"))

    # Building handlers
    dp.message.register(cmd_buildings, Command("buildings"))
    dp.message.register(cmd_build, Command("build"))
    dp.message.register(cmd_upgrade, Command("upgrade"))

    # Wizard handlers
    dp.message.register(cmd_profile, Command("profile"))
    dp.message.register(cmd_wizards, Command("wizards"))
    dp.message.register(cmd_spells, Command("spells"))
    dp.message.register(cmd_research, Command("research"))
    dp.message.register(cmd_cancel_research, Command("cancel_research"))
    dp.message.register(cmd_hire_wizard, Command("hire_wizard"))

    # City handler
    dp.message.register(open_city, Command("city"))

    # --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS ---
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã origins (—É–±—Ä–∞–Ω—ã –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã)
    origins = [
        "https://academy-of-elements.vercel.app",
        "https://academy-of-elements.onrender.com",
        "http://localhost:8000",
        "http://127.0.0.1:8000",
    ]

    app.add_middleware(
        CORSMiddleware,
        allow_origins=origins,
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )

    # --- FastAPI Endpoints ---
    # –†–æ—É—Ç—ã –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    @app.get("/")
    async def read_index():
        return FileResponse(BASE_DIR / "web" / "index.html")

    @app.get("/city")
    async def read_city():
        return FileResponse(BASE_DIR / "web" / "index.html")

    # API endpoints
    @app.get("/api/health")
    async def health_check():
        return {"status": "ok", "message": "FastAPI —Å–µ—Ä–≤–µ—Ä Academy of Elements —Ä–∞–±–æ—Ç–∞–µ—Ç!"}

    @app.get("/api/test")
    async def test_api():
        return {"message": "FastAPI API —Ä–∞–±–æ—Ç–∞–µ—Ç!"}

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ API endpoint –¥–ª—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏
    app.post("/api/build")(api_build)

    # --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ ---
    # –ê–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ Render
    web_dir = BASE_DIR / "web"
    web_images_dir = web_dir / "images"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫
    if web_dir.is_dir():
        # –ú–æ–Ω—Ç–∏—Ä—É–µ–º –ø–∞–ø–∫—É web –¥–ª—è —Ä–∞–∑–¥–∞—á–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        # –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ index.html –ø—É—Ç–∏ –∫ script.js/style.css –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
        # –ï—Å–ª–∏ index.html served –Ω–∞–ø—Ä—è–º—É—é, —Ç–æ script.js –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ /static/script.js
        # –ï—Å–ª–∏ index.html —Å—á–∏—Ç–∞–µ—Ç —Å–µ–±—è –≤ –∫–æ—Ä–Ω–µ, —Ç–æ script.js –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ /script.js
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —Å–º–æ–Ω—Ç–∏—Ä—É–µ–º –¥–≤–∞–∂–¥—ã –∏–ª–∏ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –ø—É—Ç–∏ –≤ index.html
        app.mount("/static", StaticFiles(directory=str(web_dir)), name="static")
        print(f"üìÅ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∏–∑: {web_dir}")
        
        # –î–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–¥–∞–Ω–∏–π
        if web_images_dir.is_dir():
            app.mount("/images", StaticFiles(directory=str(web_images_dir)), name="images")
            print(f"üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∏–∑: {web_images_dir}")
        else:
            print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π '{web_images_dir}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    else:
        print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ '{web_dir}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –Ω–µ –±—É–¥—É—Ç –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å—Å—è.")

    return app
