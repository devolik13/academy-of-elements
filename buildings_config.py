# buildings_config.py
"""–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–¥–∞–Ω–∏–π –¥–ª—è Academy of Elements."""

# –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∑–¥–∞–Ω–∏–π –∏ –∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
BUILDINGS_DATA = {
    "library": {
        "id": "library",
        "name": "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞",
        "description": "–¶–µ–Ω—Ç—Ä –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π.",
        "emoji": "üìö",
        "is_unique": True,
        "is_starting": True,
        "can_build": False,
        "max_level": 1,
        "costs": {
            "build_time": 0, # –ù–µ —Å—Ç—Ä–æ–∏—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
            "upgrade_times": [] # –ù–µ—Ç —É–ª—É—á—à–µ–Ω–∏–π
        },
        "effects": {
            "function": "research_center"
        }
    },
    "wizard_tower": {
        "id": "wizard_tower",
        "name": "–ë–∞—à–Ω—è –º–∞–≥–æ–≤",
        "description": "–£—Å–∏–ª–∏–≤–∞–µ—Ç –º–∞–≥–æ–≤ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–Ω–∏–º–∞—Ç—å –Ω–æ–≤—ã—Ö.",
        "emoji": "üßô‚Äç‚ôÇÔ∏è",
        "is_unique": True,
        "is_starting": True,
        "can_build": False, # –£–∂–µ –µ—Å—Ç—å, –Ω–µ —Å—Ç—Ä–æ–∏—Ç—Å—è
        "max_level": 10,
        "costs": {
            "build_time": 0, # –ù–µ —Å—Ç—Ä–æ–∏—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
            # –í—Ä–µ–º—è —É–ª—É—á—à–µ–Ω–∏–π: –£—Ä–æ–≤–µ–Ω—å N - 2^(N-1) –¥–Ω–µ–π
            "upgrade_times": [2**(i-1) for i in range(1, 11)] # [1, 2, 4, 8, ..., 512]
        },
        "effects": {
            "health_bonus_per_level": 10, # +10% –∫ –∑–¥–æ—Ä–æ–≤—å—é –∑–∞ —É—Ä–æ–≤–µ–Ω—å
            "spell_power_levels": {3: 10, 6: 20, 9: 30}, # +10% –Ω–∞ 3, +20% –Ω–∞ 6, +30% –Ω–∞ 9
            "level_10_bonus": "duplicate_spell_slot" # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –µ—â–µ —Ä–∞–∑
        }
    },
    "blessing_tower": {
        "id": "blessing_tower",
        "name": "–ë–∞—à–Ω—è –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–π",
        "description": "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ—â–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏—è –¥–ª—è –º–∞–≥–æ–≤.",
        "emoji": "üõê",
        "is_unique": True,
        "is_starting": False,
        "can_build": True,
        "max_level": 5,
        "costs": {
            "build_time": 15, # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏ (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å)
            # –í—Ä–µ–º—è —É–ª—É—á—à–µ–Ω–∏–π: –£—Ä–æ–≤–µ–Ω—å N - 10 * 2^(N-1) –¥–Ω–µ–π
            "upgrade_times": [10 * (2**(i-1)) for i in range(1, 6)] # [10, 20, 40, 80, 160]
        },
        "effects": {
            "blessings_unlocked": list(range(1, 6)) # –û—Ç–∫—Ä—ã–≤–∞–µ—Ç 1-–µ –ø–æ 5-–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ
        }
    },
    "aom_generator": {
        "id": "aom_generator",
        "name": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ê–û–ú",
        "description": "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª—ã AOM - –æ—Å–Ω–æ–≤–Ω—É—é –≤–∞–ª—é—Ç—É.",
        "emoji": "üíé",
        "is_unique": True,
        "is_starting": False,
        "can_build": True,
        "max_level": 20,
        "costs": {
            "build_time": 1, # –í—Ä–µ–º—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏
            # –£–ª—É—á—à–µ–Ω–∏—è: –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞ 20% –¥–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
            # –£—Ä–æ–≤–µ–Ω—å 2: 1 * 1.2 = 1.2 –¥–Ω—è, –£—Ä–æ–≤–µ–Ω—å 3: 1.2 * 1.2 = 1.44 –¥–Ω—è –∏ —Ç.–¥.
            "upgrade_times": [] # –ë—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ –ø–æ —Ñ–æ—Ä–º—É–ª–µ
        },
        "effects": {
            "aom_base_production": 100, # –ë–∞–∑–æ–≤–∞—è –¥–æ–±—ã—á–∞ 100 AOM/–¥–µ–Ω—å
            "aom_production_multiplier": 1.2 # +20% –∑–∞ —É—Ä–æ–≤–µ–Ω—å
        }
    },
    "pvp_arena": {
        "id": "pvp_arena",
        "name": "PvP –ê—Ä–µ–Ω–∞",
        "description": "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –±–æ–µ–≤ 1 –Ω–∞ 1 –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É autochess —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º.",
        "emoji": "‚öîÔ∏è",
        "is_unique": True,
        "is_starting": False,
        "can_build": True,
        "max_level": 1,
        "costs": {
            "build_time": 7, # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏ (–Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å)
            "upgrade_times": [] # –ù–µ—Ç —É–ª—É—á—à–µ–Ω–∏–π
        },
        "effects": {
            "function": "pvp_battles_1v1",
            "rating_system": True,
            "battle_logs": True
        }
    },
    "defense_tower": {
        "id": "defense_tower",
        "name": "–ë–∞—à–Ω—è –∑–∞—â–∏—Ç—ã",
        "description": "–ó–∞—â–∏—â–∞–µ—Ç –≥–æ—Ä–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –∏–∑—É—á–µ–Ω–Ω—ã–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è.",
        "emoji": "üõ°Ô∏è",
        "is_unique": True,
        "is_starting": False,
        "can_build": True,
        "max_level": 5,
        "costs": {
            "build_time": 12, # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏ (–Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å)
            # –í—Ä–µ–º—è —É–ª—É—á—à–µ–Ω–∏–π: –£—Ä–æ–≤–µ–Ω—å N - 10 * 2^(N-1) –¥–Ω–µ–π
            "upgrade_times": [10 * (2**(i-1)) for i in range(1, 6)] # [10, 20, 40, 80, 160]
        },
        "effects": {
            "spells_used": "equal_to_level" # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π = —É—Ä–æ–≤–µ–Ω—å –±–∞—à–Ω–∏
        }
    },
    "arcane_lab": {
        "id": "arcane_lab",
        "name": "–ê—Ä–∫–∞–Ω—Å–∫–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è",
        "description": "–£—Å–∫–æ—Ä—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π.",
        "emoji": "‚öóÔ∏è",
        "is_unique": True,
        "is_starting": False,
        "can_build": True,
        "max_level": 15,
        "costs": {
            "build_time": 3, # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏ (–Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å)
            # –£–ª—É—á—à–µ–Ω–∏—è: –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞ 50% –¥–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
            # –£—Ä–æ–≤–µ–Ω—å 1: 1 –¥–µ–Ω—å, –£—Ä–æ–≤–µ–Ω—å 2: 1 * 1.5 = 1.5 –¥–Ω—è –∏ —Ç.–¥.
            "upgrade_times": [] # –ë—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ –ø–æ —Ñ–æ—Ä–º—É–ª–µ
        },
        "effects": {
            "research_speed_bonus": {
                # –°–æ–≤–æ–∫—É–ø–Ω—ã–π –±–æ–Ω—É—Å –¥–æ 30%
                # –£—Ä–æ–≤–Ω–∏ 1-4: +1% –∫–∞–∂–¥—ã–π (4%)
                # –£—Ä–æ–≤–Ω–∏ 5-8: +1.5% –∫–∞–∂–¥—ã–π (6%)
                # –£—Ä–æ–≤–Ω–∏ 9-12: +2% –∫–∞–∂–¥—ã–π (8%)
                # –£—Ä–æ–≤–Ω–∏ 13-14: +3.5% –∫–∞–∂–¥—ã–π (7%)
                # –£—Ä–æ–≤–µ–Ω—å 15: +5% (5%)
                # –ò—Ç–æ–≥–æ: 30%
                "per_level": [
                    1, 1, 1, 1,      # –£—Ä–æ–≤–Ω–∏ 1-4
                    1.5, 1.5, 1.5, 1.5,  # –£—Ä–æ–≤–Ω–∏ 5-8
                    2, 2, 2, 2,      # –£—Ä–æ–≤–Ω–∏ 9-12
                    3.5, 3.5,        # –£—Ä–æ–≤–Ω–∏ 13-14
                    5               # –£—Ä–æ–≤–µ–Ω—å 15
                ]
            }
        }
    }
}

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª —Å—Ç–æ–∏–º–æ—Å—Ç–∏
# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä AOM - —É–ª—É—á—à–µ–Ω–∏—è
aom_upgrade_times = [1.0] # –£—Ä–æ–≤–µ–Ω—å 1 (—É–ª—É—á—à–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ—Å—Ç—Ä–æ–π–∫–∏)
for i in range(2, 21): # –£—Ä–æ–≤–Ω–∏ 2-20
    aom_upgrade_times.append(aom_upgrade_times[-1] * 1.2)
    
BUILDINGS_DATA["aom_generator"]["costs"]["upgrade_times"] = aom_upgrade_times[1:] # –ë–µ–∑ –±–∞–∑–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è

# –ê—Ä–∫–∞–Ω—Å–∫–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è - —É–ª—É—á—à–µ–Ω–∏—è
arcane_upgrade_times = [1.0] # –£—Ä–æ–≤–µ–Ω—å 1
for i in range(2, 16): # –£—Ä–æ–≤–Ω–∏ 2-15
    arcane_upgrade_times.append(arcane_upgrade_times[-1] * 1.5)
    
BUILDINGS_DATA["arcane_lab"]["costs"]["upgrade_times"] = arcane_upgrade_times[1:] # –ë–µ–∑ –±–∞–∑–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–¥–∞–Ω–∏–∏
def get_building_data(building_id):
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∑–¥–∞–Ω–∏—è –ø–æ –µ–≥–æ ID."""
    return BUILDINGS_DATA.get(building_id)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å—Ç—Ä–æ–π–∫–∏/—É–ª—É—á—à–µ–Ω–∏—è
def get_building_time(building_id, level=None):
    """
    –ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ —É–ª—É—á—à–µ–Ω–∏—è –∑–¥–∞–Ω–∏—è.
    –í–°–ï–ì–î–ê –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0 —Å–µ–∫—É–Ω–¥ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞.
    
    Args:
        building_id (str): ID –∑–¥–∞–Ω–∏—è.
        level (int, optional): –£—Ä–æ–≤–µ–Ω—å –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è. 
        
    Returns:
        float: –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–≤—Å–µ–≥–¥–∞ 0).
    """
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º building_id –∏ level, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0 —Å–µ–∫—É–Ω–¥ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    return 0.0 # 0 —Å–µ–∫—É–Ω–¥

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –∑–¥–∞–Ω–∏—è
def get_max_level(building_id):
    """–ü–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∑–¥–∞–Ω–∏—è."""
    building = get_building_data(building_id)
    return building["max_level"] if building else 0